name: dockercompose1427224872835961812
services:
  backend:
    build:
      context: C:\Users\kamil\Desktop\Gymnasium\GymApp
      dockerfile: GymApp/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    image: backend
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\kamil\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\kamil\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  db:
    environment:
      POSTGRES_DB: gymnasium
      POSTGRES_PASSWORD: root
      POSTGRES_USER: myuser
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U myuser -d gymnasium
      timeout: 3s
      interval: 10s
      retries: 3
      start_period: 20s
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib/postgresql/data
      volume: {}
  frontend:
    build:
      context: C:\Users\kamil\Desktop\Gymnasium\GymApp\front\gym-app
      dockerfile: Dockerfile
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3000
      published: "3000"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\kamil\Desktop\Gymnasium\GymApp\front\gym-app
      target: /app
      bind:
        create_host_path: true
    - type: volume
      target: /app/node_modules
      volume: {}
    - type: volume
      target: /app/.next
      volume: {}
networks:
  default:
    name: dockercompose1427224872835961812_default
volumes:
  postgres_data:
    name: dockercompose1427224872835961812_postgres_data